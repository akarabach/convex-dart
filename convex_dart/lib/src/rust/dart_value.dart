// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'dart_value.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `assert_receiver_is_total_eq`, `clone`, `clone`, `eq`, `fmt`, `fmt`, `fmt`, `from`, `from`, `from`, `from`, `from`, `from`, `from`, `from`

/// An application error that can be returned from Convex functions. To learn
/// more about throwing custom application errors, see [Convex Errors](https://docs.convex.dev/functions/error-handling/application-errors#throwing-application-errors).
class DartConvexError {
  /// From any error, redacted from prod deployments.
  final String message;

  /// Custom application error data payload that can be passed from your
  /// function to a client.
  final DartValue data;

  const DartConvexError({required this.message, required this.data});

  @override
  int get hashCode => message.hashCode ^ data.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DartConvexError &&
          runtimeType == other.runtimeType &&
          message == other.message &&
          data == other.data;
}

@freezed
sealed class DartValue with _$DartValue {
  const DartValue._();

  const factory DartValue.null_() = DartValue_Null;
  const factory DartValue.int64(PlatformInt64 field0) = DartValue_Int64;
  const factory DartValue.float64(double field0) = DartValue_Float64;
  const factory DartValue.boolean(bool field0) = DartValue_Boolean;
  const factory DartValue.string(String field0) = DartValue_String;
  const factory DartValue.bytes(Uint8List field0) = DartValue_Bytes;
  const factory DartValue.array(List<DartValue> field0) = DartValue_Array;
  const factory DartValue.object(BTreeMapStringDartValue field0) =
      DartValue_Object;
}
